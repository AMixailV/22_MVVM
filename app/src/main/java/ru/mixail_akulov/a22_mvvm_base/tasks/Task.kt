package ru.mixail_akulov.a22_mvvm_base.tasks

// 11.1.3 Объявляем тип Callback<T>
typealias Callback<T> = (T) -> Unit

/**
 * Представляет абстрактную асинхронную задачу, которая может возвращать результат или ошибку.
 */
interface Task<T> {

    /**
     * Зарегистрируйте прослушиватель, который будет вызываться, когда задача завершится с успешным результатом
     */
    fun onSuccess(callback: Callback<T>): Task<T>

    /**
     * Зарегистрируйте прослушиватель, который будет вызываться, когда задача завершится с исключением
     */
    fun onError(callback: Callback<Throwable>): Task<T>

    /**
     * Отменить задачу и удалить всех слушателей
     */
    fun cancel()

    /**
     * Заблокируйте текущий поток и дождитесь результатов синхронно.
     * Исключение выдается в случае ошибок.
     */
    fun await(): T

}